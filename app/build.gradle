apply plugin: 'com.android.application'

android {

    signingConfigs {
        wensente {
            keyAlias 'wensente'
            keyPassword '20170531'
            storeFile file('D:/Android/key/wensente.jks')
            storePassword '20170531'
        }
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    defaultConfig {
        applicationId "com.chuizi.wensente"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64'
            // 还可以添加 , 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "e09c495f9c5b6950552edc98", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        signingConfig signingConfigs.wensente
    }

    //对于dex 的--multi-dex 选项设置与预编译的library工程有冲突,因此如果你的应用中包含引用的lirary工程,需要将预编译设置为false:
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false // 是否混淆
            shrinkResources false // 是否去除无效的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.wensente
        }
        debug {
            minifyEnabled false // 是否混淆
            shrinkResources false // 是否去除无效的资源文件
            signingConfig signingConfigs.wensente
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.ashokvarma.android:bottom-navigation-bar:1.3.0'
    compile 'com.lzy.net:okgo:2.0.0'
    compile 'cn.jiguang.sdk:jpush:3.0.1'
    compile 'cn.jiguang.sdk:jcore:1.1.0'
    compile 'org.aspectj:aspectjrt:1.8.9'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    compile 'com.github.iwgang:countdownview:2.1.2'
    compile 'com.google.android.gms:play-services:10.2.1'
    testCompile 'junit:junit:4.12'
    compile project(':core')
}
